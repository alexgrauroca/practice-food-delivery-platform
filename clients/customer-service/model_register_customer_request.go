/*
Customer Service API

API documentation for the customer service.  This service provides endpoints for customer registration and management. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package customerclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RegisterCustomerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegisterCustomerRequest{}

// RegisterCustomerRequest struct for RegisterCustomerRequest
type RegisterCustomerRequest struct {
	// Customer's email address
	Email string `json:"email" validate:"regexp=^[\\\\w\\\\.-]+@[\\\\w\\\\.-]+\\\\.\\\\w{2,}$"`
	// Password must be at least 8 characters long
	Password string `json:"password"`
	// Customer's full name
	Name string `json:"name"`
	// Customer's address
	Address string `json:"address"`
	// Customer's city
	City string `json:"city"`
	// Customer's postal code
	PostalCode string `json:"postal_code"`
	// Customer's country code in ISO 3166-1 alpha-2 format
	CountryCode string `json:"country_code"`
}

type _RegisterCustomerRequest RegisterCustomerRequest

// NewRegisterCustomerRequest instantiates a new RegisterCustomerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterCustomerRequest(email string, password string, name string, address string, city string, postalCode string, countryCode string) *RegisterCustomerRequest {
	this := RegisterCustomerRequest{}
	this.Email = email
	this.Password = password
	this.Name = name
	this.Address = address
	this.City = city
	this.PostalCode = postalCode
	this.CountryCode = countryCode
	return &this
}

// NewRegisterCustomerRequestWithDefaults instantiates a new RegisterCustomerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterCustomerRequestWithDefaults() *RegisterCustomerRequest {
	this := RegisterCustomerRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *RegisterCustomerRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *RegisterCustomerRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *RegisterCustomerRequest) SetEmail(v string) {
	o.Email = v
}

// GetPassword returns the Password field value
func (o *RegisterCustomerRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *RegisterCustomerRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *RegisterCustomerRequest) SetPassword(v string) {
	o.Password = v
}

// GetName returns the Name field value
func (o *RegisterCustomerRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RegisterCustomerRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RegisterCustomerRequest) SetName(v string) {
	o.Name = v
}

// GetAddress returns the Address field value
func (o *RegisterCustomerRequest) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *RegisterCustomerRequest) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *RegisterCustomerRequest) SetAddress(v string) {
	o.Address = v
}

// GetCity returns the City field value
func (o *RegisterCustomerRequest) GetCity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.City
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
func (o *RegisterCustomerRequest) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.City, true
}

// SetCity sets field value
func (o *RegisterCustomerRequest) SetCity(v string) {
	o.City = v
}

// GetPostalCode returns the PostalCode field value
func (o *RegisterCustomerRequest) GetPostalCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value
// and a boolean to check if the value has been set.
func (o *RegisterCustomerRequest) GetPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PostalCode, true
}

// SetPostalCode sets field value
func (o *RegisterCustomerRequest) SetPostalCode(v string) {
	o.PostalCode = v
}

// GetCountryCode returns the CountryCode field value
func (o *RegisterCustomerRequest) GetCountryCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value
// and a boolean to check if the value has been set.
func (o *RegisterCustomerRequest) GetCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CountryCode, true
}

// SetCountryCode sets field value
func (o *RegisterCustomerRequest) SetCountryCode(v string) {
	o.CountryCode = v
}

func (o RegisterCustomerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegisterCustomerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["password"] = o.Password
	toSerialize["name"] = o.Name
	toSerialize["address"] = o.Address
	toSerialize["city"] = o.City
	toSerialize["postal_code"] = o.PostalCode
	toSerialize["country_code"] = o.CountryCode
	return toSerialize, nil
}

func (o *RegisterCustomerRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"password",
		"name",
		"address",
		"city",
		"postal_code",
		"country_code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRegisterCustomerRequest := _RegisterCustomerRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRegisterCustomerRequest)

	if err != nil {
		return err
	}

	*o = RegisterCustomerRequest(varRegisterCustomerRequest)

	return err
}

type NullableRegisterCustomerRequest struct {
	value *RegisterCustomerRequest
	isSet bool
}

func (v NullableRegisterCustomerRequest) Get() *RegisterCustomerRequest {
	return v.value
}

func (v *NullableRegisterCustomerRequest) Set(val *RegisterCustomerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterCustomerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterCustomerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterCustomerRequest(val *RegisterCustomerRequest) *NullableRegisterCustomerRequest {
	return &NullableRegisterCustomerRequest{value: val, isSet: true}
}

func (v NullableRegisterCustomerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterCustomerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


