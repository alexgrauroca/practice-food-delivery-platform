/*
Customer Service API

API documentation for the customer service.  This service provides endpoints for customer registration and management. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package customerclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetCustomersResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCustomersResponse{}

// GetCustomersResponse struct for GetCustomersResponse
type GetCustomersResponse struct {
	// List of customers
	Items []Customer `json:"items"`
	Pagination Pagination `json:"pagination"`
}

type _GetCustomersResponse GetCustomersResponse

// NewGetCustomersResponse instantiates a new GetCustomersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCustomersResponse(items []Customer, pagination Pagination) *GetCustomersResponse {
	this := GetCustomersResponse{}
	this.Items = items
	this.Pagination = pagination
	return &this
}

// NewGetCustomersResponseWithDefaults instantiates a new GetCustomersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCustomersResponseWithDefaults() *GetCustomersResponse {
	this := GetCustomersResponse{}
	return &this
}

// GetItems returns the Items field value
func (o *GetCustomersResponse) GetItems() []Customer {
	if o == nil {
		var ret []Customer
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *GetCustomersResponse) GetItemsOk() ([]Customer, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *GetCustomersResponse) SetItems(v []Customer) {
	o.Items = v
}

// GetPagination returns the Pagination field value
func (o *GetCustomersResponse) GetPagination() Pagination {
	if o == nil {
		var ret Pagination
		return ret
	}

	return o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value
// and a boolean to check if the value has been set.
func (o *GetCustomersResponse) GetPaginationOk() (*Pagination, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pagination, true
}

// SetPagination sets field value
func (o *GetCustomersResponse) SetPagination(v Pagination) {
	o.Pagination = v
}

func (o GetCustomersResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCustomersResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	toSerialize["pagination"] = o.Pagination
	return toSerialize, nil
}

func (o *GetCustomersResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"items",
		"pagination",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetCustomersResponse := _GetCustomersResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetCustomersResponse)

	if err != nil {
		return err
	}

	*o = GetCustomersResponse(varGetCustomersResponse)

	return err
}

type NullableGetCustomersResponse struct {
	value *GetCustomersResponse
	isSet bool
}

func (v NullableGetCustomersResponse) Get() *GetCustomersResponse {
	return v.value
}

func (v *NullableGetCustomersResponse) Set(val *GetCustomersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCustomersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCustomersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCustomersResponse(val *GetCustomersResponse) *NullableGetCustomersResponse {
	return &NullableGetCustomersResponse{value: val, isSet: true}
}

func (v NullableGetCustomersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCustomersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


