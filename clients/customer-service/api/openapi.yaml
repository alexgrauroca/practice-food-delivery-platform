openapi: 3.0.3
info:
  contact:
    name: Ã€lex Grau Roca
    url: https://github.com/alexgrauroca
  description: |
    API documentation for the customer service.

    This service provides endpoints for customer registration and management.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Customer Service API
  version: 1.0.0
servers:
- description: Local server
  url: http://localhost:80
security:
- BearerAuth: []
tags:
- description: Operations related to customer registration and management
  name: Customers
paths:
  /v1.0/customers:
    post:
      description: Creates a new customer account with the provided information
      operationId: registerCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterCustomerRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterCustomerResponse"
          description: Customer registered successfully
        "400":
          content:
            application/json:
              examples:
                invalidRequest:
                  $ref: "#/components/examples/InvalidRequest"
                validationError:
                  summary: Validation error
                  value:
                    code: VALIDATION_ERROR
                    message: validation failed
                    details:
                    - email is required
                    - password is required
                    - name is required
                    - email must be a valid email address
                    - password must be a valid password with at least 8 characters
                      long
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid input or validation error
        "409":
          content:
            application/json:
              examples:
                customerExists:
                  $ref: "#/components/examples/CustomerExists"
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Customer already exists
        "500":
          $ref: "#/components/responses/InternalError"
      security: []
      summary: Register a new customer
      tags:
      - Customers
components:
  examples:
    InvalidRequest:
      summary: Invalid JSON
      value:
        code: INVALID_REQUEST
        message: invalid request
        details: []
    CustomerExists:
      summary: Customer already exists
      value:
        code: CUSTOMER_ALREADY_EXISTS
        message: customer already exists
        details: []
    InternalError:
      summary: Unexpected error
      value:
        code: INTERNAL_ERROR
        message: An unexpected error occurred
        details: []
  responses:
    InternalError:
      content:
        application/json:
          examples:
            internalError:
              $ref: "#/components/examples/InternalError"
          schema:
            $ref: "#/components/schemas/ErrorResponse"
      description: Internal server error
  schemas:
    RegisterCustomerRequest:
      example:
        country_code: US
        password: strongpassword123
        address: 123 Main St
        city: New York
        name: John Doe
        postal_code: "10001"
        email: user@example.com
      properties:
        email:
          description: Customer's email address
          example: user@example.com
          format: email
          pattern: "^[\\w\\.-]+@[\\w\\.-]+\\.\\w{2,}$"
          type: string
        password:
          description: Password must be at least 8 characters long
          example: strongpassword123
          format: password
          minLength: 8
          type: string
          writeOnly: true
        name:
          description: Customer's full name
          example: John Doe
          maxLength: 100
          minLength: 1
          type: string
        address:
          description: Customer's address
          example: 123 Main St
          maxLength: 100
          minLength: 1
          type: string
        city:
          description: Customer's city
          example: New York
          maxLength: 100
          minLength: 1
          type: string
        postal_code:
          description: Customer's postal code
          example: "10001"
          maxLength: 32
          minLength: 5
          type: string
        country_code:
          description: Customer's country code in ISO 3166-1 alpha-2 format
          example: US
          maxLength: 2
          minLength: 2
          type: string
      required:
      - address
      - city
      - country_code
      - email
      - name
      - password
      - postal_code
      type: object
    RegisterCustomerResponse:
      example:
        country_code: US
        address: 123 Main St
        city: New York
        name: John Doe
        created_at: 2025-01-01T00:00:00Z
        id: cust-123abc
        postal_code: "10001"
        email: user@example.com
      properties:
        id:
          description: Unique customer identifier
          example: cust-123abc
          pattern: "^[a-zA-Z0-9\\-]+$"
          type: string
        email:
          description: Customer's email address
          example: user@example.com
          format: email
          type: string
        name:
          description: Customer's full name
          example: John Doe
          type: string
        address:
          description: Customer's address
          example: 123 Main St
          maxLength: 100
          minLength: 1
          type: string
        city:
          description: Customer's city
          example: New York
          maxLength: 100
          minLength: 1
          type: string
        postal_code:
          description: Customer's postal code
          example: "10001"
          maxLength: 32
          minLength: 5
          type: string
        country_code:
          description: Customer's country code in ISO 3166-1 alpha-2 format
          example: US
          maxLength: 2
          minLength: 2
          type: string
        created_at:
          description: Account creation timestamp
          example: 2025-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - address
      - city
      - country_code
      - created_at
      - email
      - id
      - name
      - postal_code
      type: object
    ErrorResponse:
      example:
        code: VALIDATION_ERROR
        details:
        - email is required
        - password is required
        message: validation failed
      properties:
        code:
          description: Error code identifier
          example: VALIDATION_ERROR
          type: string
        message:
          description: Human-readable error message
          example: validation failed
          type: string
        details:
          description: Additional error details
          example:
          - email is required
          - password is required
          items:
            type: string
          type: array
      required:
      - code
      - message
      type: object
  securitySchemes:
    BearerAuth:
      bearerFormat: JWT
      description: JWT token obtained from the login endpoint
      scheme: bearer
      type: http
