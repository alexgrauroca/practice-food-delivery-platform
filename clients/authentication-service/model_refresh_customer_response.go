/*
Authentication Service API

API documentation for the authentication service.  This service provides endpoints for customer and staff registration and authentication. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RefreshCustomerResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RefreshCustomerResponse{}

// RefreshCustomerResponse struct for RefreshCustomerResponse
type RefreshCustomerResponse struct {
	// JWT access token for API authentication
	AccessToken string `json:"access_token"`
	// Token used to obtain a new access token when it expires
	RefreshToken string `json:"refresh_token"`
	// Access token expiration time in seconds
	ExpiresIn int32 `json:"expires_in"`
	// Access token type
	TokenType string `json:"token_type"`
}

type _RefreshCustomerResponse RefreshCustomerResponse

// NewRefreshCustomerResponse instantiates a new RefreshCustomerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRefreshCustomerResponse(accessToken string, refreshToken string, expiresIn int32, tokenType string) *RefreshCustomerResponse {
	this := RefreshCustomerResponse{}
	this.AccessToken = accessToken
	this.RefreshToken = refreshToken
	this.ExpiresIn = expiresIn
	this.TokenType = tokenType
	return &this
}

// NewRefreshCustomerResponseWithDefaults instantiates a new RefreshCustomerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRefreshCustomerResponseWithDefaults() *RefreshCustomerResponse {
	this := RefreshCustomerResponse{}
	return &this
}

// GetAccessToken returns the AccessToken field value
func (o *RefreshCustomerResponse) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *RefreshCustomerResponse) GetAccessTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *RefreshCustomerResponse) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetRefreshToken returns the RefreshToken field value
func (o *RefreshCustomerResponse) GetRefreshToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value
// and a boolean to check if the value has been set.
func (o *RefreshCustomerResponse) GetRefreshTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefreshToken, true
}

// SetRefreshToken sets field value
func (o *RefreshCustomerResponse) SetRefreshToken(v string) {
	o.RefreshToken = v
}

// GetExpiresIn returns the ExpiresIn field value
func (o *RefreshCustomerResponse) GetExpiresIn() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value
// and a boolean to check if the value has been set.
func (o *RefreshCustomerResponse) GetExpiresInOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiresIn, true
}

// SetExpiresIn sets field value
func (o *RefreshCustomerResponse) SetExpiresIn(v int32) {
	o.ExpiresIn = v
}

// GetTokenType returns the TokenType field value
func (o *RefreshCustomerResponse) GetTokenType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value
// and a boolean to check if the value has been set.
func (o *RefreshCustomerResponse) GetTokenTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenType, true
}

// SetTokenType sets field value
func (o *RefreshCustomerResponse) SetTokenType(v string) {
	o.TokenType = v
}

func (o RefreshCustomerResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RefreshCustomerResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["access_token"] = o.AccessToken
	toSerialize["refresh_token"] = o.RefreshToken
	toSerialize["expires_in"] = o.ExpiresIn
	toSerialize["token_type"] = o.TokenType
	return toSerialize, nil
}

func (o *RefreshCustomerResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"access_token",
		"refresh_token",
		"expires_in",
		"token_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRefreshCustomerResponse := _RefreshCustomerResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRefreshCustomerResponse)

	if err != nil {
		return err
	}

	*o = RefreshCustomerResponse(varRefreshCustomerResponse)

	return err
}

type NullableRefreshCustomerResponse struct {
	value *RefreshCustomerResponse
	isSet bool
}

func (v NullableRefreshCustomerResponse) Get() *RefreshCustomerResponse {
	return v.value
}

func (v *NullableRefreshCustomerResponse) Set(val *RefreshCustomerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRefreshCustomerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRefreshCustomerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRefreshCustomerResponse(val *RefreshCustomerResponse) *NullableRefreshCustomerResponse {
	return &NullableRefreshCustomerResponse{value: val, isSet: true}
}

func (v NullableRefreshCustomerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRefreshCustomerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


