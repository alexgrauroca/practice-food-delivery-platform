/*
Authentication Service API

API documentation for the authentication service.  This service provides endpoints for customer and staff registration and authentication. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authclient

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the RegisterCustomerResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegisterCustomerResponse{}

// RegisterCustomerResponse struct for RegisterCustomerResponse
type RegisterCustomerResponse struct {
	// Unique customer identifier
	Id string `json:"id" validate:"regexp=^[0-9a-fA-F]{24}$"`
	// Customer's email address
	Email string `json:"email"`
	// Customer's full name
	Name string `json:"name"`
	// Account creation timestamp
	CreatedAt time.Time `json:"created_at"`
}

type _RegisterCustomerResponse RegisterCustomerResponse

// NewRegisterCustomerResponse instantiates a new RegisterCustomerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterCustomerResponse(id string, email string, name string, createdAt time.Time) *RegisterCustomerResponse {
	this := RegisterCustomerResponse{}
	this.Id = id
	this.Email = email
	this.Name = name
	this.CreatedAt = createdAt
	return &this
}

// NewRegisterCustomerResponseWithDefaults instantiates a new RegisterCustomerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterCustomerResponseWithDefaults() *RegisterCustomerResponse {
	this := RegisterCustomerResponse{}
	return &this
}

// GetId returns the Id field value
func (o *RegisterCustomerResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RegisterCustomerResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RegisterCustomerResponse) SetId(v string) {
	o.Id = v
}

// GetEmail returns the Email field value
func (o *RegisterCustomerResponse) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *RegisterCustomerResponse) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *RegisterCustomerResponse) SetEmail(v string) {
	o.Email = v
}

// GetName returns the Name field value
func (o *RegisterCustomerResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RegisterCustomerResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RegisterCustomerResponse) SetName(v string) {
	o.Name = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *RegisterCustomerResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *RegisterCustomerResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *RegisterCustomerResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o RegisterCustomerResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegisterCustomerResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["email"] = o.Email
	toSerialize["name"] = o.Name
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *RegisterCustomerResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"email",
		"name",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRegisterCustomerResponse := _RegisterCustomerResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRegisterCustomerResponse)

	if err != nil {
		return err
	}

	*o = RegisterCustomerResponse(varRegisterCustomerResponse)

	return err
}

type NullableRegisterCustomerResponse struct {
	value *RegisterCustomerResponse
	isSet bool
}

func (v NullableRegisterCustomerResponse) Get() *RegisterCustomerResponse {
	return v.value
}

func (v *NullableRegisterCustomerResponse) Set(val *RegisterCustomerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterCustomerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterCustomerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterCustomerResponse(val *RegisterCustomerResponse) *NullableRegisterCustomerResponse {
	return &NullableRegisterCustomerResponse{value: val, isSet: true}
}

func (v NullableRegisterCustomerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterCustomerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


