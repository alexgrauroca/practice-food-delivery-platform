name: Food Delivery Platform CI

on:
  pull_request:
    paths:
      - '**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GO_VERSION: '1.24'

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      run_e2e: ${{ steps.filter.outputs.run_e2e }}
      openapi_specs_changed: ${{ steps.filter.outputs.openapi_specs_changed }}
      auth_service_internal: ${{ steps.filter.outputs.auth_service_internal }}
      auth_service_docs: ${{ steps.filter.outputs.auth_service_docs }}
      customer_service_internal: ${{ steps.filter.outputs.customer_service_internal }}
      customer_service_docs: ${{ steps.filter.outputs.customer_service_docs }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            run_e2e:
              - 'docker-compose.yml'
              - 'clients/**'
              - 'deployments/**'
              - 'e2e/**'
              - 'scripts/**'
              - 'services/*/cmd/**'
              - 'services/*/internal/**'
              - 'services/*/Dockerfile'
              - 'services/*/go.mod'
              - 'services/*/go.sum'
              - 'services/*/Makefile'
            openapi_specs_changed:
              - 'services/*/docs/dist/openapi.yaml'
              - 'services/*/client-gen-config.yaml'
              - 'scripts/validate-service-clients.sh'
            auth_service_internal:
              - 'services/authentication-service/internal/**'
            auth_service_docs:
              - 'services/authentication-service/docs/**'
            customer_service_internal:
              - 'services/customer-service/internal/**'
            customer_service_docs:
              - 'services/customer-service/docs/**'

  validate-service-clients:
    needs: changes
    if: ${{ needs.changes.outputs.openapi_specs_changed == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install OpenAPI Generator
        run: npm install -g @openapitools/openapi-generator-cli

      - name: Make script executable
        run: chmod +x ./scripts/validate-service-clients.sh

      - name: Validate clients
        run: ./scripts/validate-service-clients.sh

  authentication-service-unit-tests:
    needs: changes
    if: ${{ needs.changes.outputs.auth_service_internal == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/authentication-service
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run Unit Tests
        run: make run-unit-tests

  authentication-service-integration-tests:
    needs: changes
    if: ${{ needs.changes.outputs.auth_service_internal == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/authentication-service
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run Integration Tests
        run: make run-integration-tests

  authentication-service-validate-openapi-docs:
    needs: changes
    if: ${{ needs.changes.outputs.auth_service_docs == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/authentication-service
    steps:
      - uses: actions/checkout@v4
      - name: Validate OpenAPI sync
        run: make openapi-validate-sync
      - name: Validate OpenAPI documentation
        run: make openapi-validate-docs

  customer-service-unit-tests:
    needs: changes
    if: ${{ needs.changes.outputs.customer_service_internal == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/customer-service
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run Unit Tests
        run: make run-unit-tests

  customer-service-integration-tests:
    needs: changes
    if: ${{ needs.changes.outputs.customer_service_internal == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/customer-service
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run Integration Tests
        run: make run-integration-tests

  customer-service-validate-openapi-docs:
    needs: changes
    if: ${{ needs.changes.outputs.customer_service_docs == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/customer-service
    steps:
      - uses: actions/checkout@v4
      - name: Validate OpenAPI sync
        run: make openapi-validate-sync
      - name: Validate OpenAPI documentation
        run: make openapi-validate-docs

  e2e-tests:
    needs: changes
    if: ${{ needs.changes.outputs.run_e2e == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: e2e
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run E2E Tests
        run: make run-e2e-tests
