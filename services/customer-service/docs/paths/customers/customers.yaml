get:
  summary: Get the list of customers
  description: Returns a list of customers
  operationId: getCustomers
  tags:
    - Customers
  security:
    - BearerAuth: [ ]
  parameters:
    - name: page
      in: query
      description: Page number for pagination
      schema:
        type: integer
        default: 1
        minimum: 1
        example: 1
    - name: page-size
      in: query
      description: Number of items per page
      schema:
        type: integer
        default: 10
        minimum: 1
        maximum: 100
        example: 20
    - name: sort
      in: query
      description: |
        Sort fields and directions, comma-separated.
        Prefix field with '-' for descending order.
        Multiple fields can be specified (e.g., 'name,-email').
        Available sort fields:
          - name: Customer's full name
          - email: Customer's email address
          - created-at: Account creation date
      schema:
        type: string
        pattern: '^(-?(name|email|created-at),)*(-?(name|email|created-at))$'
        default: name
        example: 'name,-email'
  responses:
    '200':
      description: List of customers retrieved successfully
      content:
        application/json:
          schema:
            $ref: './../../components/schemas/responses/GetCustomersResponse.yaml'
    '400':
      description: Invalid parameters
      content:
        application/json:
          schema:
            $ref: './../../components/schemas/responses/ErrorResponse.yaml'
          examples:
            invalidRequest:
              $ref: './../../components/examples/InvalidRequest.yaml'
    '401':
      $ref: './../../components/responses/Unauthorized.yaml'
    '403':
      $ref: './../../components/responses/Forbidden.yaml'
    '500':
      $ref: './../../components/responses/InternalError.yaml'
  
post:
  summary: Register a new customer
  description: Creates a new customer account with the provided information
  operationId: registerCustomer
  tags:
    - Customers
  security: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: './../../components/schemas/requests/RegisterCustomerRequest.yaml'
  responses:
    '201':
      description: Customer registered successfully
      content:
        application/json:
          schema:
            $ref: './../../components/schemas/responses/RegisterCustomerResponse.yaml'
    '400':
      description: Invalid input or validation error
      content:
        application/json:
          schema:
            $ref: './../../components/schemas/responses/ErrorResponse.yaml'
          examples:
            invalidRequest:
              $ref: './../../components/examples/InvalidRequest.yaml'
            validationError:
              $ref: './../../components/examples/RegisterCustomerValidationError.yaml'
    '409':
      description: Customer already exists
      content:
        application/json:
          schema:
            $ref: './../../components/schemas/responses/ErrorResponse.yaml'
          examples:
            customerExists:
              $ref: './../../components/examples/CustomerExists.yaml'
    '500':
      $ref: './../../components/responses/InternalError.yaml'